{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Button, Overlay, Input } from 'react-native-elements';\nimport MapView, { Marker } from 'react-native-maps';\nimport * as Location from 'expo-location';\nimport { Ionicons } from '@expo/vector-icons';\nexport function MapScreen(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      errorMsg = _useState2[0],\n      setErrorMsg = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentLatitude = _useState4[0],\n      setCurrentLatitude = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentLongitude = _useState6[0],\n      setCurrentLongitude = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      initialLatitude = _useState8[0],\n      setInitialLatitude = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      initialLongitude = _useState10[0],\n      setInitialLongitude = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      addPOI = _useState12[0],\n      setAddPOI = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      listPOI = _useState14[0],\n      setListPOI = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      visible = _useState16[0],\n      setVisible = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      overlayTitle = _useState18[0],\n      setOverlayTitle = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      overlayDesc = _useState20[0],\n      setOverlayDesc = _useState20[1];\n\n  var _useState21 = useState({}),\n      _useState22 = _slicedToArray(_useState21, 2),\n      tempPOI = _useState22[0],\n      setTempPOI = _useState22[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 7;\n                break;\n              }\n\n              setErrorMsg('Permission to access location was denied');\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 9:\n              location = _context.sent;\n              setInitialLatitude(location.coords.latitude);\n              setInitialLongitude(location.coords.longitude);\n              _context.next = 14;\n              return _regeneratorRuntime.awrap(Location.watchPositionAsync({\n                distanceInterval: 2\n              }, function (location) {\n                setCurrentLatitude(location.coords.latitude);\n                setCurrentLongitude(location.coords.longitude);\n              }));\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var selectPOI = function selectPOI(e) {\n    if (addPOI) {\n      setVisible(true);\n      setAddPOI(false);\n      setTempPOI({\n        latitude: e.nativeEvent.coordinate.latitude,\n        longitude: e.nativeEvent.coordinate.longitude\n      });\n    }\n  };\n\n  function handleSubmit() {\n    setListPOI([].concat(_toConsumableArray(listPOI), [{\n      latitude: tempPOI.latitude,\n      longitude: tempPOI.longitude,\n      title: overlayTitle,\n      description: overlayDesc\n    }]));\n    setVisible(false);\n    setTempPOI();\n    setOverlayDesc();\n    setOverlayTitle();\n  }\n\n  var markerPOI = listPOI.map(function (POI, i) {\n    return React.createElement(Marker, {\n      key: i,\n      title: POI.title,\n      description: POI.description,\n      pinColor: \"blue\",\n      coordinate: {\n        latitude: POI.latitude,\n        longitude: POI.longitude\n      }\n    });\n  });\n\n  var toggleOverlay = function toggleOverlay() {\n    setVisible(!visible);\n  };\n\n  var isDisabled = false;\n\n  if (addPOI) {\n    isDisabled = true;\n  }\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(MapView, {\n    region: {\n      latitude: initialLatitude,\n      longitude: initialLongitude,\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0421\n    },\n    style: styles.map,\n    onPress: function onPress(e) {\n      return selectPOI(e);\n    },\n    loadingEnabled: true\n  }, React.createElement(Marker, {\n    pinColor: \"#eb4d4b\",\n    coordinate: {\n      latitude: currentLatitude,\n      longitude: currentLongitude\n    },\n    title: \"Hello \" + props.pseudo,\n    description: \"I am here\"\n  }), markerPOI), React.createElement(Button, {\n    disabled: isDisabled,\n    onPress: function onPress() {\n      return setAddPOI(true);\n    },\n    buttonStyle: styles.button,\n    title: \"Add a Point Of Interest\",\n    icon: React.createElement(Ionicons, {\n      name: \"location-sharp\",\n      size: 21,\n      color: \"#fff\",\n      style: {\n        marginRight: 5\n      }\n    })\n  }), React.createElement(Overlay, {\n    isVisible: visible,\n    onBackdropPress: toggleOverlay\n  }, React.createElement(View, {\n    style: {\n      width: 200\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Title\",\n    onChangeText: setOverlayTitle,\n    value: overlayTitle\n  }), React.createElement(Input, {\n    placeholder: \"Description\",\n    onChangeText: setOverlayDesc,\n    value: overlayDesc\n  }), React.createElement(Button, {\n    title: \"Add POI\",\n    buttonStyle: styles.btnAddPOI,\n    onPress: function onPress() {\n      return handleSubmit();\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  map: {\n    flex: 1,\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  },\n  button: {\n    backgroundColor: '#eb4d4b',\n    padding: 15\n  },\n  btnAddPOI: {\n    backgroundColor: '#eb4d4b',\n    padding: 5,\n    width: '70%',\n    alignSelf: 'center',\n    borderRadius: 50\n  }\n});\n\nfunction mapStateToProps(state) {\n  return {\n    pseudo: state.pseudo\n  };\n}\n\nexport default connect(mapStateToProps, null)(MapScreen);","map":{"version":3,"sources":["/Users/baptistehauville/Desktop/lacapsule/project/07_locapic/part4/frontend/screens/MapScreen.js"],"names":["React","useEffect","useState","connect","Button","Overlay","Input","MapView","Marker","Location","Ionicons","MapScreen","props","errorMsg","setErrorMsg","currentLatitude","setCurrentLatitude","currentLongitude","setCurrentLongitude","initialLatitude","setInitialLatitude","initialLongitude","setInitialLongitude","addPOI","setAddPOI","listPOI","setListPOI","visible","setVisible","overlayTitle","setOverlayTitle","overlayDesc","setOverlayDesc","tempPOI","setTempPOI","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","location","coords","latitude","longitude","watchPositionAsync","distanceInterval","selectPOI","e","nativeEvent","coordinate","handleSubmit","title","description","markerPOI","map","POI","i","toggleOverlay","isDisabled","styles","container","latitudeDelta","longitudeDelta","pseudo","button","marginRight","width","btnAddPOI","StyleSheet","create","flex","Dimensions","get","height","backgroundColor","padding","alignSelf","borderRadius","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { StyleSheet, View, Dimensions, Text } from 'react-native';\nimport { Button, Overlay, Input } from 'react-native-elements';\nimport MapView, { Marker } from 'react-native-maps';\nimport * as Location from 'expo-location';\nimport { Ionicons } from '@expo/vector-icons';\n\nexport function MapScreen(props) {\n\n    const [errorMsg, setErrorMsg] = useState(null);\n\n    const [currentLatitude, setCurrentLatitude] = useState(0);\n    const [currentLongitude, setCurrentLongitude] = useState(0);\n\n    const [initialLatitude, setInitialLatitude] = useState(0);\n    const [initialLongitude, setInitialLongitude] = useState(0);\n\n    const [addPOI, setAddPOI] = useState(false);\n    const [listPOI, setListPOI] = useState([])\n\n    const [visible, setVisible] = useState(false);\n\n    const [overlayTitle, setOverlayTitle] = useState('');\n    const [overlayDesc, setOverlayDesc] = useState('');\n\n    const [tempPOI, setTempPOI] = useState({})\n\n    useEffect(() => {\n        (async () => {\n            let { status } = await Location.requestForegroundPermissionsAsync();\n            if (status !== 'granted') {\n                setErrorMsg('Permission to access location was denied');\n                return;\n            }\n\n            // Affiche la position du user au lancement de l'app\n            let location = await Location.getCurrentPositionAsync({});\n            setInitialLatitude(location.coords.latitude)\n            setInitialLongitude(location.coords.longitude)\n\n            // Suivre la position du user\n            await Location.watchPositionAsync({ distanceInterval: 2 }, (location) => {\n                setCurrentLatitude(location.coords.latitude);\n                setCurrentLongitude(location.coords.longitude)\n            });\n        })();\n\n\n    }, []);\n\n    let selectPOI = (e) => {\n        if (addPOI) {\n            setVisible(true)\n            setAddPOI(false)\n            setTempPOI({ latitude: e.nativeEvent.coordinate.latitude, longitude: e.nativeEvent.coordinate.longitude })\n        }\n    }\n\n    function handleSubmit() {\n        setListPOI([...listPOI, { latitude: tempPOI.latitude, longitude: tempPOI.longitude, title: overlayTitle, description: overlayDesc }])\n        setVisible(false)\n        setTempPOI()\n        setOverlayDesc()\n        setOverlayTitle()\n    }\n\n    let markerPOI = listPOI.map((POI, i) => {\n        return (\n            <Marker\n                key={i}\n                title={POI.title}\n                description={POI.description}\n                pinColor='blue'\n                coordinate={{ latitude: POI.latitude, longitude: POI.longitude }}\n            />\n        )\n    })\n\n    const toggleOverlay = () => {\n        setVisible(!visible);\n    };\n\n    var isDisabled = false;\n    if (addPOI) {\n        isDisabled = true;\n    }\n\n    return (\n        <View style={styles.container}>\n            <MapView\n                region={{\n                    latitude: initialLatitude,\n                    longitude: initialLongitude,\n                    latitudeDelta: 0.0922,\n                    longitudeDelta: 0.0421,\n                }}\n                style={styles.map}\n                onPress={(e) => selectPOI(e)}\n                loadingEnabled={true}\n            >\n                <Marker\n                    pinColor='#eb4d4b'\n                    coordinate={{ latitude: currentLatitude, longitude: currentLongitude }}\n                    title={`Hello ${props.pseudo}`}\n                    description='I am here'\n                />\n                {markerPOI}\n            </MapView>\n\n            <Button\n                disabled={isDisabled}\n                onPress={() => setAddPOI(true)}\n                buttonStyle={styles.button}\n                title='Add a Point Of Interest'\n                icon={\n                    <Ionicons\n                        name=\"location-sharp\"\n                        size={21}\n                        color=\"#fff\"\n                        style={{ marginRight: 5 }}\n                    />\n                }\n            />\n\n            <Overlay isVisible={visible} onBackdropPress={toggleOverlay}>\n                <View style={{ width: 200 }}>\n                    <Input placeholder='Title' onChangeText={setOverlayTitle} value={overlayTitle} />\n                    <Input placeholder='Description' onChangeText={setOverlayDesc} value={overlayDesc} />\n                    <Button title='Add POI' buttonStyle={styles.btnAddPOI} onPress={() => handleSubmit()} />\n                </View>\n            </Overlay>\n\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    map: {\n        flex: 1,\n        width: Dimensions.get('window').width,\n        height: Dimensions.get('window').height\n    },\n    button: {\n        backgroundColor: '#eb4d4b',\n        padding: 15,\n    },\n    btnAddPOI: {\n        backgroundColor: '#eb4d4b',\n        padding: 5,\n        width: '70%',\n        alignSelf: 'center',\n        borderRadius: 50\n    }\n});\n\nfunction mapStateToProps(state){\n    return{\n        pseudo: state.pseudo\n    }\n}\nexport default connect(mapStateToProps, null)(MapScreen);"]},"metadata":{},"sourceType":"module"}