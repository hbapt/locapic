{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ListItem, Input, Button } from 'react-native-elements';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { SimpleLineIcons } from '@expo/vector-icons';\nimport socketIOClient from \"socket.io-client\";\nvar socket = socketIOClient(\"http://192.168.1.100:3000\");\n\nfunction ChatScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentMessage = _useState2[0],\n      setCurrentMessage = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listMessage = _useState4[0],\n      setListMessage = _useState4[1];\n\n  useEffect(function () {\n    socket.on('sendMessageToAll', function (messageData) {\n      setListMessage([].concat(_toConsumableArray(listMessage), [messageData]));\n    });\n    return function () {\n      return socket.off(\"sendMessageToAll\");\n    };\n  }, [listMessage]);\n  var listMessageItems = listMessage.map(function (item, i) {\n    var msg = item.message.replace(/:\\)/g, \"\\u263A\");\n    msg = msg.replace(/:\\(/g, \"\\u2639\");\n    msg = msg.replace(/:\\p/g, \"\\uD83D\\uDE1B\");\n    return React.createElement(ListItem, {\n      key: i\n    }, React.createElement(ListItem.Content, null, React.createElement(ListItem.Title, null, msg), React.createElement(ListItem.Subtitle, null, item.pseudo)));\n  });\n  return React.createElement(View, {\n    style: styles.safeAreaView\n  }, React.createElement(SafeAreaView, {\n    style: styles.safeAreaView\n  }, React.createElement(ScrollView, null, listMessageItems)), React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\"\n  }, React.createElement(Input, {\n    placeholder: \"Your message\",\n    onChangeText: setCurrentMessage,\n    value: currentMessage\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      socket.emit(\"sendMessage\", {\n        message: currentMessage,\n        pseudo: props.pseudo\n      });\n      setCurrentMessage('');\n    },\n    title: \"Send\",\n    buttonStyle: styles.button,\n    icon: React.createElement(SimpleLineIcons, {\n      name: \"envelope\",\n      size: 20,\n      color: \"#fff\",\n      style: {\n        marginRight: 5\n      }\n    })\n  })));\n}\n\nvar styles = StyleSheet.create({\n  safeAreaView: {\n    flex: 1\n  },\n  button: {\n    backgroundColor: '#eb4d4b',\n    padding: 15\n  }\n});\n\nfunction mapStateToProps(state) {\n  return {\n    pseudo: state.pseudo\n  };\n}\n\nexport default connect(mapStateToProps, null)(ChatScreen);","map":{"version":3,"sources":["/Users/baptistehauville/Desktop/lacapsule/project/07_locapic/part4/frontend/screens/ChatScreen.js"],"names":["React","useEffect","useState","connect","ListItem","Input","Button","SafeAreaView","SimpleLineIcons","socketIOClient","socket","ChatScreen","props","currentMessage","setCurrentMessage","listMessage","setListMessage","on","messageData","off","listMessageItems","map","item","i","msg","message","replace","pseudo","styles","safeAreaView","Platform","OS","emit","button","marginRight","StyleSheet","create","flex","backgroundColor","padding","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { StyleSheet, View, ScrollView, KeyboardAvoidingView, Platform } from 'react-native';\nimport { ListItem, Input, Button } from 'react-native-elements';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { SimpleLineIcons } from '@expo/vector-icons';\n\nimport socketIOClient from \"socket.io-client\"; // Import du module client\nvar socket = socketIOClient(\"http://192.168.1.100:3000\"); // Initialisation d'un web socket\n\nfunction ChatScreen(props) {\n\n    const [currentMessage, setCurrentMessage] = useState('');\n    const [listMessage, setListMessage] = useState([]);\n\n    useEffect(() => {\n        socket.on('sendMessageToAll', function (messageData) {\n            setListMessage([...listMessage, messageData])\n        })\n\n        return () => socket.off(\"sendMessageToAll\") // Voir sur Orion\n\n    }, [listMessage]);\n\n    var listMessageItems = listMessage.map((item, i) => {\n\n        var msg = item.message.replace(/:\\)/g, '\\u263a');\n        msg = msg.replace(/:\\(/g, '\\u2639');\n        msg = msg.replace(/:\\p/g, '\\uD83D\\uDE1B');\n\n        return (\n            <ListItem key={i}>\n                <ListItem.Content>\n                    <ListItem.Title>{msg}</ListItem.Title>\n                    <ListItem.Subtitle>{item.pseudo}</ListItem.Subtitle>\n                </ListItem.Content>\n            </ListItem>\n        )\n    });\n\n    return (\n\n        <View style={styles.safeAreaView}>\n\n            <SafeAreaView style={styles.safeAreaView}>\n\n                <ScrollView>\n\n                    {listMessageItems}\n\n                </ScrollView>\n\n            </SafeAreaView>\n\n            <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}>\n\n                <Input\n                    placeholder=\"Your message\"\n                    onChangeText={setCurrentMessage}\n                    value={currentMessage}\n                />\n\n                <Button\n                    onPress={() => {\n                        socket.emit(\"sendMessage\",\n                            { message: currentMessage, pseudo: props.pseudo }); setCurrentMessage('');\n                    }}\n                    title='Send'\n                    buttonStyle={styles.button}\n                    icon={\n                        <SimpleLineIcons\n                            name=\"envelope\"\n                            size={20}\n                            color=\"#fff\"\n                            style={{ marginRight: 5 }}\n                        />\n                    }\n\n                />\n\n            </KeyboardAvoidingView>\n\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    safeAreaView: {\n        flex: 1\n    },\n    button: {\n        backgroundColor: '#eb4d4b',\n        padding: 15,\n    }\n});\n\nfunction mapStateToProps(state) {\n    return {\n        pseudo: state.pseudo\n    }\n}\nexport default connect(mapStateToProps, null)(ChatScreen)"]},"metadata":{},"sourceType":"module"}