{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Button, Input, Text } from 'react-native-elements';\nimport { FontAwesome } from '@expo/vector-icons';\nexport function HomeScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      pseudo = _useState2[0],\n      setPseudo = _useState2[1];\n\n  useEffect(function () {\n    AsyncStorage.getItem('pseudo', function (error, data) {\n      setPseudo(data);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(ImageBackground, {\n    source: require(\"../assets/home.jpg\"),\n    style: styles.image\n  }, React.createElement(Input, {\n    placeholder: \"John\",\n    leftIcon: {\n      type: 'font-awesome',\n      name: 'user',\n      color: '#eb4d4b'\n    },\n    containerStyle: styles.input,\n    onChangeText: function onChangeText(value) {\n      return setPseudo(value);\n    }\n  }), React.createElement(Button, {\n    buttonStyle: styles.button,\n    icon: React.createElement(FontAwesome, {\n      name: \"arrow-right\",\n      size: 20,\n      color: \"#eb4d4b\",\n      style: {\n        marginRight: 5\n      }\n    }),\n    title: \"Go to Map\",\n    onPress: function onPress() {\n      props.onSubmitPseudo(pseudo);\n      props.navigation.navigate('TabNavigator', {\n        screen: 'Map'\n      }), AsyncStorage.setItem(\"pseudo\", pseudo);\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  image: {\n    flex: 1,\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    resizeMode: 'cover'\n  },\n  button: {\n    width: 140,\n    alignSelf: 'center',\n    borderRadius: 20\n  },\n  input: {\n    color: '#fff',\n    width: '70%',\n    alignSelf: 'center'\n  }\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onSubmitPseudo: function onSubmitPseudo(pseudo) {\n      dispatch({\n        type: 'savePseudo',\n        pseudo: pseudo\n      });\n    }\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(HomeScreen);","map":{"version":3,"sources":["/Users/baptistehauville/Desktop/lacapsule/project/07_locapic/part4/frontend/screens/HomeScreen.js"],"names":["React","useEffect","useState","connect","AsyncStorage","Button","Input","Text","FontAwesome","HomeScreen","props","pseudo","setPseudo","getItem","error","data","styles","container","require","image","type","name","color","input","value","button","marginRight","onSubmitPseudo","navigation","navigate","screen","setItem","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","height","width","resizeMode","alignSelf","borderRadius","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { StyleSheet, View, ImageBackground } from 'react-native';\n\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nimport { Button, Input, Text } from 'react-native-elements';\nimport { FontAwesome } from '@expo/vector-icons';\n\nexport function HomeScreen(props) {\n\n    const [pseudo, setPseudo] = useState('')\n\n    useEffect(() => {\n        AsyncStorage.getItem('pseudo', function (error, data) {\n            setPseudo(data)\n        });\n\n        \n\n    }, [])\n\n    return (\n        <View style={styles.container}>\n            <ImageBackground source={require('../assets/home.jpg')} style={styles.image}>\n                <Input\n                    placeholder=\"John\"\n                    leftIcon={{ type: 'font-awesome', name: 'user', color: '#eb4d4b' }}\n                    containerStyle={styles.input}\n                    onChangeText={(value) => setPseudo(value)}\n                />\n                <Button\n                    buttonStyle={styles.button}\n                    icon={\n                        <FontAwesome\n                            name=\"arrow-right\"\n                            size={20}\n                            color=\"#eb4d4b\"\n                            style={{ marginRight: 5 }}\n                        />\n                    }\n                    title='Go to Map'\n                    onPress={() => { props.onSubmitPseudo(pseudo); props.navigation.navigate('TabNavigator', { screen: 'Map' }), AsyncStorage.setItem(\"pseudo\", pseudo) }}\n                />\n            </ImageBackground>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    image: {\n        flex: 1,\n        justifyContent: 'center',\n        height: '100%',\n        width: '100%',\n        resizeMode: 'cover'\n    },\n    button: {\n        width: 140,\n        alignSelf: 'center',\n        borderRadius: 20\n    },\n    input: {\n        color: '#fff',\n        width: '70%',\n        alignSelf: 'center'\n    }\n});\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        onSubmitPseudo: function (pseudo) {\n            dispatch({ type: 'savePseudo', pseudo: pseudo })\n        }\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(HomeScreen);\n"]},"metadata":{},"sourceType":"module"}